@using SLThree.Extensions
@using static sltlang.SpecHelper
@model Type
@{
    ViewData["Title"] = Model.Name;
    Locale locale = (Locale)ViewData["culture"]!;
    Layout = "_Layout";
    var fields = Model.GetFields(System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Instance);
    var properties = Model.GetProperties(System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Instance);
    var inheritors = Model.Assembly.GetTypes().Where(x => x.BaseType == Model).ToArray();
}

<h1>@Html.Raw(ReplaceCompares(Model.FullName))</h1>
<p>@locale["Specification_Hierarchy"]: @Html.Raw(GetAncestors(Model).Reverse().Select(x => MakeLink(x, locale)).JoinIntoString(" → "))</p>
<p>@locale["Specification_Interfaces"]: @Html.Raw(Model.GetInterfaces().Select(x => MakeLink(x, locale)).JoinIntoString(", "))</p>
@if (fields.Length > 0 || properties.Length > 0)
{
    <h2>@locale["Specification_Members"]</h2>
    <ul>
        @foreach (var x in fields)
        {
            <li><strong>@x.Name</strong> @Html.Raw(MakeLink(x.FieldType, locale))
                @{
                    var elementHelp = locale[$"Element[{x.DeclaringType.Name}.{x.Name}]"];
                    if (elementHelp != $"Element[{x.DeclaringType.Name}.{x.Name}]")
                    {
                        <br><span>@elementHelp</span>
                    }
                }
            </li>
        }
        @foreach (var x in properties)
        {
            <li><strong>@x.Name</strong>@if (!x.CanWrite)
                {
                    <span class="slt-keyword1">readonly</span>
                } @Html.Raw(MakeLink(x.PropertyType, locale))
                @{
                    var elementHelp = locale[$"Element[{x.DeclaringType.Name}.{x.Name}]"];
                    if (elementHelp != $"Element[{x.DeclaringType.Name}.{x.Name}]")
                    {
                        <br><span>@elementHelp</span>
                    }
                }</li>
        }
    </ul>
}
@RenderBody()
@if (inheritors.Length > 0)
{
    <h2>@locale["Specification_Inheritors"]</h2>
    <ul>
        @foreach (var x in inheritors)
        {
            <li><strong>@Html.Raw(MakeLink(x, locale))</strong></li>
        }
    </ul>
}